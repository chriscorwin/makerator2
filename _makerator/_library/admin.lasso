[	$makerator_includes->insert(include_currentPath);	$makerator_currentInclude							=	$makerator_includes->last;	handle;			$makerator_includes->remove;			$makerator_currentInclude					=	$makerator_includes->last;	/handle;			protect;		handle_error;			makerator_errorManager(				$makerator_currentInclude			,	error_code			,	error_msg			,	action_statement			);	/handle_error;			$content_siteAdminToolbar += '<div id="admincontent">';		var('skip_past_admin'=false);	// site-specific hub	inline($authForFileOperations, action_params);			if(file_exists('/_site/_library/site_hub.lasso'));					include('/_site/_library/site_hub.lasso');			/if;	/inline;			select(true);		case(response_path == $makerator_pathToAdmin);			include('/_makerator/_library/admin_default_content.lasso');					case($skip_past_admin);			//include('/_makerator/_library/admin_default_content.lasso');				case(response_path == '' + $makerator_pathToAdmin + 'add_clients/');						$content_primary += '<p>add clients is disabled</p>';			include('/_Assets/add_clients.lasso');				case(response_path == '' + $makerator_pathToAdmin + 'site_map/');			//$css_src_head = array;			var('rendered') = asset_manager->loadmodule('/_site/templates/' $templating_templateName '.lasso');			asset_manager->add('/assets/css/makerator/modules/sitemap_light.css');			var('treesql'=(xs_cat->(fullCatSQL(-id=1, -cattable='Pages',-orderby='node.lft',-xtrareturn=', node.rgt, node.lft, node.page_url, node.content, node.visible_in_menu ', -xtraWhere=' '))));			// $content_primary += '<textarea rows="5" cols="40">'+$treesql+'</textarea>';						inline($authForDatabase, -sql=$treesql);					var('lastDepth' = -1);					$content_primary += '<div  id="sitemap">'; // put some whitespace in the source					rows;							var('thisDepth' = integer(column('depth')));														local('target'=column('id'));							var('path_to_node' = (xs_cat->getURLpath(-id=column('id'), -cattable='Pages')));														select(true);								case($thisDepth == 0);									//root level									$content_primary += '<ul class="root ' $thisDepth '" >';									$content_primary += '\r' ('\t') '<li id="node-' column('id')'-container"  class="root  ' $thisDepth'">';									$content_primary += '<a name="'column('name')'" href="'$path_to_node'" class="sort-handle" id="node-' column('id')'">'column('name') /*' ('column('id')')'*/ '</a>';																	case($thisdepth == $lastdepth);									$content_primary += '</li>';																		var('nodetype'=string);									var('x'=(xs_cat->(fullCatSQL(-id=column('id'), -cattable='Pages',-orderby='node.lft',-xtrareturn=', node.lft, node.page_url, node.content, node.visible_in_menu ', -xtraWhere=' AND parent.id = 'column('id')''))));									inline(-sql=$x);										found_count > 1 ? $nodetype = 'folder' | $nodetype = 'file';									/inline;									$content_primary += ('\r' ('\t' * ($thisDepth + $thisDepth + 1)) '<li id="node-' column('id')'-container"  class="clear sortableitem ' $nodetype ' ' $thisDepth '">');									$content_primary += '<a name="'column('name')'" href="'$path_to_node'" class="sort-handle" id="node-' column('id')'" >'column('name') /*' ('column('id')')'*/ '</a>';																										case($thisDepth > $lastDepth);									$content_primary += '\r' ('\t' * ($thisDepth + $thisDepth)) '<ul class="clear sortableitem file ' $thisDepth '">';									var('nodetype'=string);									var('x'=(xs_cat->(fullCatSQL(-id=column('id'), -cattable='Pages',-orderby='node.lft',-xtrareturn=', node.lft, node.page_url, node.content, node.visible_in_menu ', -xtraWhere=' AND parent.id = 'column('id')''))));									inline(-sql=$x);										found_count > 1 ? $nodetype = 'folder' | $nodetype = 'file';									/inline;									//$nodetype == 'file' ? $content_primary += '<li class="clear new"><a name="'column('name')'" class="button" href="#new">Create New Page Here</a></li>';									$content_primary += ('\r' ('\t' * ($thisDepth + $thisDepth + 1)) '<li id="node-' column('id') '-container"  class="clear sortableitem ' $nodetype ' ' $thisDepth '">');									$content_primary += '<a href="'$path_to_node'" class="sort-handle" id="node-' column('id')'">'column('name') /*' ('column('id')')'*/ '</a>';																	case($thisDepth < $lastDepth);									$content_primary += '</li>\r';									$content_primary += '</ul>\r';									$content_primary += '</li>\r';									$content_primary += '\r '('\t' * ($thisDepth + $thisDepth)) '</ul>';									$content_primary += '\r '('\t' * ($thisDepth + $thisDepth)) '<ul class="clear sortableitem ' $thisDepth '">';									var('nodetype'=string);									var('x'=(xs_cat->(fullCatSQL(-id=column('id'), -cattable='Pages',-orderby='node.lft',-xtrareturn=', node.lft, node.page_url, node.content, node.visible_in_menu ', -xtraWhere=' AND parent.id = 'column('id')''))));									inline(-sql=$x);										found_count > 1 ? $nodetype = 'folder' | $nodetype = 'file';									/inline;									$content_primary += ('\r' ('\t' * ($thisDepth + $thisDepth + 1)) '<li id="node-' column('id') '-container"  class="clear sortableitem ' $nodetype ' ' $thisDepth '">');									$content_primary += '<a name="'column('name')'" href="'$path_to_node'" class="sort-handle" id="node-' column('id')'">'column('name') /*' ('column('id')')'*/ '</a>';							/select;							$lastDepth = $thisDepth;							//*									$content_primary += '<div class="pagearrangers">';									//<!-- a class=" move_top" title="Move this page to the top of it&rsquo;s directory" href="' + $makerator_pathToAdmin + 'Move_Page_to_Top/Page-'column('id')'"><strong>&uarr;&uarr;</strong></a -->									$content_primary += '<a title="Click make a new page &ldquo;under&rdquo; this one." class="page_new" href="#add_under-'column('id')'"><strong>&oplus;</strong></a>';									$content_primary += '<a title="Click to edit this page&rsquo;s content." class=" edit_content" href="' + $makerator_pathToAdmin + 'edit_content/page-' + column('id') + '"><strong>&sect;</strong></a>';									if($thisDepth != 0);									$content_primary += '<a title="Click this to move the page up in the site map." class="page_up" href="' + $makerator_pathToAdmin + 'move_page_up/page-' + column('id') + '"><strong>&uarr;</strong></a>';									$content_primary += '<a title="Click this to move the page to the bottom of its parent in the site map." class="page_bottom" href="' + $makerator_pathToAdmin + 'move_page_to_bottom/page-' + column('id') + '"><strong>&darr;&darr;</strong></a>';									$content_primary += '<a title="Click this to go to chose anywhere in the site to move this page to." class="move_page" href="' + $makerator_pathToAdmin + 'move_page_to/page-' + column('id') + '"><strong>&hArr;</strong></a>';									$content_primary += '<a title="Click to delete this page." class=" delete_page" href="' + $makerator_pathToAdmin + 'delete_page/page-' + column('id') + '"><strong>&empty;</strong></a>';									/if;																									/*<!-- a class="icon_move_down" href="' + $makerator_pathToAdmin + 'Move_Page_Down/Page-'column('id')'"><strong>&darr;</strong></a -->								*/																$content_primary += '</div>';							//*/					/rows;					$content_primary += '</li>';					$content_primary += '</ul>';					$content_primary += '</li></ul>';			/inline;									$templating_inlineJquery->insert('					$("#newpageform").hide();			');									$content_primary += ('						<div id="newpageform">					<h3>Create New Page</h3>					<form action="' + $makerator_pathToAdmin + 'create_page/" method="post">					<fieldset>											<label for="new_Page_Name">Page Name</label>						<input name="title" id="new_Page_Name" type="text" value="New Page Name" maxlength="55">												<label for="page_url">Page URL</label>						<input title="This is the last part of the URL of the webpage. Like &ldquo;About&rdquo; on the About page." name="page_url" id="page_url" type="text" value="New_Page_URL" maxlength="55">																		<input name="parent" id="parent_id" type="hidden" value="" maxlength="55">												<label></label>						<button type="submit" class="button positive" value="Create a page here">							Create a page here!						</button>						<button class="button cancel_new_page" value="Cancel">Cancel</button>					</fieldset>					</form>					''			</div>							');			$templating_inlineJquery->insert('					$("li.new a").click( function(){							$("#newpageform").hide();							var stuff = ($(this).parent().parent().siblings().attr("id"));							$("#parent_id").val(stuff);							//alert(stuff);							$(this).parent().append($("#newpageform"));							$("li.new a.button").show("slow");							$(this).hide();							$("#newpageform").show("slow");							return false;					});										$("div.pagearrangers a.page_new").click( function(){							$("#newpageform").hide();							$(".pagearrangers a").hide("slow");														var stuff = ($(this).parent().parent().children().attr("id"));							$("#parent_id").val(stuff);							//alert(stuff);														$(this).parent().append($("#newpageform"));							$("li.new a.button").show("slow");							$(this).hide();							$("#newpageform").show("slow");							return false;					});										$(".cancel_new_page").click( function(){							$("#newpageform").slideUp();							$("li.new a.button").show();							$(".pagearrangers a").show("slow");							return false;					});				');			//*/			//$content_primary += '</textarea>'; // put some whitespace in the source			$content_primary += '</div>'; // put some whitespace in the source											case(response_path == '' + $makerator_pathToAdmin + 'browse_server/');				$content_primary += include('/_Assets/fckeditor/editor/filemanager/browser/default/browser.lasso?Type=Image&Connector=connectors/lasso/connector.lasso');		case(response_path == '' + $makerator_pathToAdmin + 'select_tree/');				include('/_makerator/_library/admin_select_tree.lasso');		case(response_path == '' + $makerator_pathToAdmin + 'site_refresh/');						var('tables'=array);				admin_reloaddatasource(4);				admin_refreshsecurity;				inline(-database=$siteDB);/inline;				$makeratorCacheNavbars = map;				$makerator_listerators = treemap;				$content_primary += '<p class="">Site has been refreshed: Datasources reloaded, Navbar cache cleared.</p>';				case((response_path)->beginswith('' + $makerator_pathToAdmin + 'move_page_to_bottom/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_to_bottom/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;								var('newPlace' = (xs_cat->getparent(-cattable='Pages', -id=$pageID))->find('id'));				xs_cat->moveNodeTo(-cattable='Pages',-id=$pageID, -newparent=$newPlace);				$content_primary += error_msg;				$makeratorCacheNavbars = map;				redirect_url('' + $makerator_pathToAdmin + 'site_map/#'$pageID);								/*		case((response_path)->beginswith('' + $makerator_pathToAdmin + 'move_page_to_top/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_to_top/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;								var('newPlace' = (xs_cat->getparent(-cattable='Pages', -id=$pageID))->find('id'));				xs_cat->moveNodeTo(-cattable='Pages',-id=$pageID, -newparent=$newPlace);				$content_primary += error_msg;				redirect_url('' + $makerator_pathToAdmin + 'site_map/#'$pageID);						*/									case((response_path)->beginswith('' + $makerator_pathToAdmin + 'move_page_down/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_down/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;								// First find parent id för navPlaceid				var:'parentID' = xs_cat -> (getParent(-cattable = 'Pages', -id = $pageID)) -> (find:'id');							// Then find right value for navPlaceid				var:'moveToRight' = integer(xs_cat -> (getRight(-cattable = 'Pages', -id = $pageID)));							// Then move movedObject last in list under navPlaceid				xs_cat -> (moveNodeTo(-cattable = $nestedtable, -id = $movedObject, -newparent = $parentID));							// Find initial left value for movedObject				var:'movedLeft' = integer(xs_cat -> (getLeft(-cattable = $nestedtable, -id = $movedObject)));							// Finally loop until movedObject follows directly after navPlaceid				while: $moveToRight + 1 < $movedLeft && loop_count < 100;					xs_cat -> (moveNode(-cattable = $nestedtable, -id = $movedObject));					// Check present left value for movedObject					$movedLeft = integer(xs_cat -> (getLeft(-cattable = $nestedtable, -id = $movedObject)));				/while;				$content_primary += '<p class="">pageID: ' $pageID'</p>';												var('this_right' = integer(xs_cat->(getRight(-cattable='Pages',-id=$pageID))));				var('get_sib_id' = 'SELECT id FROM Pages WHERE lft = '$siblings_left ';');								inline($authForDatabase, -sql=$get_sib_id);					rows;							var('siblings_id' = column('id'));					/rows;				/inline;				xs_cat->moveNode(-cattable='Pages',-id=$siblings_id);				$makeratorCacheNavbars = map;																				redirect_url('' + $makerator_pathToAdmin + 'site_map/' + $pageID + '/');														case((response_path)->beginswith('' + $makerator_pathToAdmin + '' + $makerator_pathToAdmin + '/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_up/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;								xs_cat->moveNode(-cattable='Pages',-id=$pageID);								$content_primary += error_msg;				$makeratorCacheNavbars = map;				redirect_url('' + $makerator_pathToAdmin + 'site_map/#'$pageID);										case(response_path == ('' + $makerator_pathToAdmin + 'move_page_to/do/'));				var('thisID' = action_param('page'));				var('newPlace' = action_param('newparent'));								xs_cat->moveNodeTo(-cattable='Pages',-id=$thisID, -newparent=$newPlace);				$content_primary += error_msg;				$makeratorCacheNavbars = map;				redirect_url('' + $makerator_pathToAdmin + 'site_map/#'$thisID);										case((response_path)->beginswith('' + $makerator_pathToAdmin + 'move_page_to/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_to/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;				if($pageID != '');						//lookup page to delete info for instructions						var('getinfo'='SELECT lft, rgt, name, page_url FROM Pages WHERE id = '+$pageID+';');						inline($authForDatabase, -sql=$getinfo);								rows;										var('a_url'=column('page_url'));										var('a_name'=column('name'));										var('a_lft'=column('lft'));										var('a_rgt'=column('rgt'));								/rows;						/inline;						var('path_to_node' = (xs_cat->getURLpath(-id=$pageid, -cattable='Pages')));						!$path_to_node->beginswith('/') ? ($path_to_node = ('/' + $path_to_node));						var('exit_page_url' = action_param('page_url'));						$content_pageTitle = 'Move the page(s)?';												$content_primary += '							<div class="warning"><p>You have chosen to move the page &ldquo;<strong><a href="'+$path_to_node+'">'+$a_name+'</a></strong> &rdquo; and <em>there is NO undo</em>  (unless you decide to move it back, of course).</p></div><div class="instructions">							<p>Note that deleting this page will also move ALL of its children, so if you do not wish to move them, you need to move them somewhere else, first.</p>							<h3>If you are sure</h3>							<p>If you wish to continue, select the new <em>parent page</em> of the page(s) you wish to move, then click &ldquo;Yes, move them&rdquo;</p>							</div>							<form action="' + $makerator_pathToAdmin + 'move_page_to/do/" method="post" style="display: inline;">								<input name="page" id="page" type="hidden" value="'+$pageID+'">								<input name="page_url" id="page_url" type="hidden" value="'+$exit_page_url+'">								<input name="target" id="target" type="hidden" value="'+action_param('target')+'">';								$content_primary += include('/_makerator/_library/admin_select_tree.lasso');								$content_primary += '<button type="submit" id="createpage" value="Yes, move them">									Yes, move them								</button>								<button 									name="-Nothing" 									value="Site Map" 									onclick="javascript:window.location=(\'' + $makerator_pathToAdmin + 'site_map/#'$pageID'\'); return false;"									>No, Cancel</button>							</form>						</div>';				else;						$content_pageTitle = 'Error';						$content_primary += '<p>You need to choose a page to move, or we cannot move one.</p>';				/if;															case(response_path == '' + $makerator_pathToAdmin + 'site_map/');				$makeratorCacheNavbars = map;				include('/_makerator/_library/admin_site_map.lasso');								case(response_path == '' + $makerator_pathToAdmin + 'delete_page/do/');				if(action_param('page'));						var('pageID' = action_param('page'));						var('get_parentID' = 'SELECT * FROM Pages WHERE id = "' + $pageID + '"');												//'<p>this: '$this'</p>';						//'<pre>'$get_parentID'</pre>';						inline($authForDatabase, -sql=$get_parentID);								if(found_count == 1);										rows;											var('parentID' = column('id'));										/rows;								else;											var('parentID' = (''));								/if;						/inline;							xs_cat->(deleteNode(-cattable='Pages',-id=$pageID));														if($gv_error != '');									// this page does not exist									$content_pageTitle = 'Error';									$content_siteAdminToolbar += '<p>'+$gv_error+'</p>';									$content_siteAdminToolbar += '<p>'+$pageID+'</p>';							else;									$makeratorCacheNavbars = map;									redirect_url('' + $makerator_pathToAdmin + 'site_map/deleted/');							/if;				/if;														case((response_path)->beginswith('' + $makerator_pathToAdmin + 'delete_page/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'delete_page/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;				if($pageID != '');						//lookup page to delete info for instructions						var('getinfo'='SELECT name, page_url FROM Pages WHERE id = '+$pageID+';');						inline($authForDatabase, -sql=$getinfo);								rows;										var('a_name'=column('name'));								/rows;						/inline;						var('path_to_node' = (xs_cat->getURLpath(-id=$pageID, -cattable='Pages')));						$content_pageTitle = 'Delete the page?';												$content_primary += '							<div class="warning"><p>You have chosen to delete the page &ldquo;'+$a_name+'&rdquo; and <em>there is NO</em> undo.</p></div>							<div class="instructions">							<p>Note that deleting this page will also delete ALL of its children.</p>							<p>Are you sure you wish to continue?</p>							</div>							<form action="' + $makerator_pathToAdmin + 'delete_page/do/" method="post" style="display: inline;">								<input name="page" id="page" type="hidden" value="'+$pageID+'">								<button type="submit" id="createpage" value="Yes, Delete" class="negative">									Yes, Delete								</button>							<button										class=""										name="-Nothing" 										value="No, Cancel" 										onclick="javascript:window.location=(\''+$path_to_node+'\'); return false;"										>No, Cancel</button>							</form>						</div>';				/if;						case(response_path == '' + $makerator_pathToAdmin + 'edit_content/do/');				var('pageID' = action_param('pageID'));				var('new_group' = action_param('group'));				var('new_template' = action_param('template'));				var('page_content' = action_param('content'));				inline(					$authForDatabase, 					-update,					-keyvalue=$pageID,					-keyfield='id',					-table='Pages',					'content'=$page_content,					'template'=$new_template,					'visible_in_menu'=$new_group					);						if(error_code == 0);								redirect_url('' + $makerator_pathToAdmin + 'edit_content/page-'+$pageID+'/saved/');						else;								$content_pageTitle = 'Error';								$content_primary += error_msg;						/if;				/inline;		case(response_path == '' + $makerator_pathToAdmin + 'change_url/do/');				var('pageID' = action_param('pageID'));				var('page_url' = action_param('page_url'));				$page_url->contains('/') && $page_url !>> 'http://' ? $page_url->removeall('/') | '';				inline(					$authForDatabase, 					-update,					-keyvalue=$pageID,					-keyfield='id',					-table='Pages',					'page_url'=$page_url,					);						if(error_code == 0);								$makeratorCacheNavbars = map;								redirect_url('' + $makerator_pathToAdmin + 'change_url/page-'+$pageID+'/saved/');						else;								$content_pageTitle = 'Error';								$content_primary += error_msg;						/if;				/inline;		case(response_path->beginswith('' + $makerator_pathToAdmin + 'change_url/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_to/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;				if($pageID != '');						inline(							$authForDatabase,							-sql=('SELECT page_url, name FROM Pages WHERE id = '+$pageID),							-table='Pages',							);																												if(error_code != 0);									$content_pageTitle = 'Error';									$content_primary += '<p>'+error_msg+'</p>';							else;									//display the editor									rows;										var('pageName' = column('name'));										var('page_url' = column('page_URL'));									/rows;									$content_pageTitle = 'Editing URL of &ldquo;'+$pageName+'&rdquo;';									$content_primary += @include('/_makerator/_library/admin_url_change_form.lasso');							/if;						/inline;				else;					$content_pageTitle = 'Error: No Page ID Specified';					$content_primary += '<div class="warning"><p>You need to specifiy a page ID to edit.</p>';					$content_primary += include('/_makerator/_library/admin_links.lasso') + '</div>';								/if;		case(response_path == '' + $makerator_pathToAdmin + 'rename_page/quick/');				var('pageID' = action_param('page_ID'));				var('pageName' = action_param('content'));				inline(					$authForDatabase, 					-update,					-keyvalue=$pageID,					-keyfield='id',					-table='Pages',					'name'=$pageName,					);						if(error_code == 0);								$makeratorCacheNavbars = map;								$__HTML_REPLY__ = 'You sucsefully changed the title of this pgae to"'+$pageName+'". You will need to refresh the page to see changes in the navbar.';								abort;						else;								$__HTML_REPLY__ = error_msg;								abort;						/if;				/inline;		case(response_path == '' + $makerator_pathToAdmin + 'rename_page/do/');				var('pageID' = action_param('pageID'));				var('pageName' = action_param('pageName'));				inline(					$authForDatabase, 					-update,					-keyvalue=$pageID,					-keyfield='id',					-table='Pages',					'name'=$pageName,					);						if(error_code == 0);								$makeratorCacheNavbars = map;								redirect_url('' + $makerator_pathToAdmin + 'rename_page/page-'+$pageID);						else;								$content_pageTitle = 'Error';								$content_primary += error_msg;						/if;				/inline;		case(response_path->beginswith('' + $makerator_pathToAdmin + 'rename_page/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'move_page_to/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;				if($pageID != '');						inline(							$authForDatabase,							-sql=('SELECT page_url, name FROM Pages WHERE id = '+$pageID),							-table='Pages',							);																												if(error_code != 0);									$content_pageTitle = 'Error';									$content_primary += '<p>'+error_msg+'</p>';							else;									//display the editor									rows;										var('pageName' = column('name'));									/rows;									$content_pageTitle = 'Editing name of &ldquo;'+$pageName+'&rdquo;';									$content_primary += @include('/_makerator/_library/admin_page_renamer.lasso');							/if;						/inline;				else;					$content_pageTitle = 'Error: No Page ID Specified';					$content_siteAdminToolbar += 'You need to specifiy a page ID to edit.';								/if;		case(response_path == '' + $makerator_pathToAdmin + 'create_page/');						// make sure we have an imcoming URL to create			if(action_param('parent') != '' && action_param('page_url') != '');					var('parentID' = action_param('parent'));					$parentID->beginswith('node-') ? $parentID->removeleading('node-'); //this tag modifies in place										var('new_page_url' = action_param('page_url'));					//$new_page_url->endswith('/') ? $new_page_url->remove('/');					var('new_content_pageTitle' = action_param('title'));					var('sql' = 'SELECT * FROM Pages WHERE page_url = "' + ($new_page_url) + '"');					inline($authForDatabase, -sql=$sql);							var('new_page_found' = found_count);					/inline;																									if($new_page_found >= 1);												// this page exists							// don't do nothing							/*							$content_pageTitle = 'Error: Page Already Exists';							$content_primary += '<p>You have asked to create a page that already exists.</p>';							$content_primary += '<p>Would you prefer to <a href="' + $makerator_pathToAdmin + 'edit_content/?pageid=' $parentID '">edit the page instead</a>?.</p>';							*/														// the above is an option -- maybe the option you want?														// down below the hub is smart enough to sort out "duplicate" pages, so it's no biggee to have them the same here.														// your choice							xs_cat->addChild(								-cattable='Pages',								-txt=$new_content_pageTitle, 								-othersmap=map(									'page_url'=$new_page_url, 'visible_in_menu'=0,									),								-id=$parentID								);																												if($gv_error != '');									// this page does not exist									$content_pageTitle = 'Error';									$content_siteAdminToolbar += '<p>'+$gv_error+'</p>';									$content_siteAdminToolbar += '<p>'+$parentID+'</p>';							else;									$makeratorCacheNavbars = map;									redirect_url(referer_url);							/if;														// this page does not exist							$content_pageTitle = 'Created Page';					else;														xs_cat->addChild(								-cattable='Pages',								-txt=$new_content_pageTitle, 								-othersmap=map(									'page_url'=$new_page_url, 'visible_in_menu'=0,									),								-id=$parentID								);																												if($gv_error != '');									// this page does not exist									$content_pageTitle = 'Error';									$content_siteAdminToolbar += '<p>'+$gv_error+'</p>';									$content_siteAdminToolbar += '<p>'+$parentID+'</p>';							else;									$makeratorCacheNavbars = map;									redirect_url(referer_url '#added');							/if;														// this page does not exist							$content_pageTitle = 'Created Page';																					//$content_siteAdminToolbar += include('/_makerator/_library/page_creation.lasso');										/if;													else(action_param('parent') == '');				$content_pageTitle = 'Error: No Parent Specified';				$content_siteAdminToolbar += 'You need to specifiy a Parent ID.';							else(action_param('parent') == '');				$content_pageTitle = 'Error: No URL Specified';				$content_siteAdminToolbar += 'You need to specifiy a URL.';						/if;		case((response_path)->beginswith('' + $makerator_pathToAdmin + 'edit_content_ajax/'));				var('pageID' = action_param('page_ID'));				var('page_content' = action_param('content'));								if(action_param('page_id') == '');						$__HTML_REPLY__ = 'No Page ID Secified';						abort;				/if;								inline(					$authForDatabase, 					-update,					-keyvalue=$pageID,					-keyfield='id',					-table='Pages',					'content'=$page_content,					);						if(error_code == 0);								$__HTML_REPLY__ = 'Save successful!';								abort;						else;								$content_pageTitle = 'Error';								$content_primary += error_msg;						/if;				/inline;										case((response_path)->beginswith('' + $makerator_pathToAdmin + 'toggle_visibility/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'toggle_visibility/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('new_visibility'=integer);				var('is_show'=boolean, 'is_hide'=boolean);				$is_show = boolean($virtual_params->find('Show'));				$is_show == true ? $virtual_params->removeall('Show');				$is_hide = boolean($virtual_params->find('Hide'));				$is_hide == true ? $virtual_params->removeall('Hide');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;												$new_visibility = (boolean($is_show) ? 1 | 0);								//$content_primary += $pageID;												if($pageID != '');						inline(							$authForDatabase,							-update,							-keyfield='id',							-keyvalue=$pageID,							-table='Pages',							'visible_in_menu'=$new_visibility,							);																												if(error_code != 0);									$content_pageTitle = 'Error';									$content_siteAdminToolbar += '<p>'+error_msg+'</p>';							else;									$content_primary += 'New Visibility: ' $new_visibility;									$makeratorCacheNavbars = map;									redirect_url('' + $makerator_pathToAdmin + 'site_map/' + $pageID + '/');							/if;						/inline;				else;					$content_pageTitle = 'Error: No Page ID Specified';					$content_siteAdminToolbar += 'You need to specifiy a page ID.';								/if;						case((response_path)->beginswith('' + $makerator_pathToAdmin + 'edit_content/'));				var('virtual_params' = response_path);				$virtual_params->removeleading('' + $makerator_pathToAdmin + 'edit_content/');				$virtual_params = ((($virtual_params)->split('/'))->removeall('') &);				var('saved'=false);				var('markdown'=false);				$markdown=boolean($virtual_params->find('Simple'));				$saved=boolean($virtual_params->find('Saved'));				$saved == true ? $virtual_params->removeall('Saved');				iterate($virtual_params, var('a_param'));						$a_param->beginswith('Page-') ? $pageID = $a_param->split('-')->last;				/iterate;				if($pageID != '');						var('pageURL' = string);						var('page_content' = action_param('content'));						inline(							$authForDatabase,							-sql=('SELECT page_url, name, content FROM Pages WHERE id = '+$pageID),							-table='Pages',							);																												if(error_code != 0);									$content_pageTitle = 'Error';									$content_siteAdminToolbar += '<p>'+error_msg+'</p>';							else(found_count != 1);									$content_pageTitle = 'Error: No Page Specified';									$content_primary += '<p>The system is unable to edit a page, if it is not told which page to edit.</p>';							else;									//display the editor									$page_content = string;									rows;										var('pageName' = column('name'));										$content_pageTitle = 'Editing: &ldquo;'+$pageName+'&rdquo;';										var('pageurl' = column('page_URL'));										column('content') != '' ? $page_content = column('content') | $page_content = '';									/rows;									$content_primary += ($markdown == true ? @include('/_makerator/_library/markdown_editor.lasso') | @include('/_makerator/_library/content_editor.lasso'));							/if;						/inline;				else;					$content_pageTitle = 'Error: No Page ID Specified';					$content_siteAdminToolbar += 'You need to specifiy a page ID to edit.';								/if;		case;			include('/_makerator/_library/admin_default_content.lasso');	/select;		/protect;]